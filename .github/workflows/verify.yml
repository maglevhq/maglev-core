name: Verify
on: [push]

jobs:
  tests:
    name: Tests
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13.8
        env:          
          POSTGRES_USER: "maglev"
          POSTGRES_PASSWORD: "password"
        ports:
          - 5432:5432
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

      mysql:
        image: mysql:8.0
        env:
          MYSQL_DATABASE: "maglev_engine_test"
          MYSQL_ROOT_PASSWORD: "password"
        ports:
          - 3306:3306
        options: >-
          --health-cmd "mysqladmin ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      mariadb:
        image: mariadb:11.8
        env:
          MARIADB_DATABASE: "maglev_engine_test"
          MARIADB_ROOT_PASSWORD: "password"
        ports:
          - 3307:3306
        options: --health-cmd="healthcheck.sh --connect --innodb_initialized" --health-interval=10s --health-timeout=5s --health-retries=3

    strategy:
      matrix:
        node: [23]
        database: [postgres, sqlite, mysql, mariadb]
        gemfile: ["Gemfile", "Gemfile.rails_7_0", "Gemfile.rails_7_2"]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Ruby and install gems using ${{ matrix.gemfile }}
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true
        env:
          BUNDLE_GEMFILE: ${{ matrix.gemfile }}

      - name: Install ImageMagick üèûÔ∏è
        run: |
          sudo apt-get update && sudo apt-get install -y imagemagick

      - name: Enable Corepack before setting up Node
        run: |
          corepack enable

      - name: Use Node.js ${{ matrix.node }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
          cache: yarn      

      - name: Install packages
        run: |
          yarn install

      - name: Run Javascript tests
        run: yarn test

      # === Postgresql üêò ===
      - name: Setup test database (Postgresql) üêò
        if: ${{ matrix.database == 'postgres' }}
        env:
          BUNDLE_GEMFILE: ${{ matrix.gemfile }}
          RAILS_ENV: test
          MAGLEV_APP_DATABASE_USERNAME: "maglev"
          MAGLEV_APP_DATABASE_PASSWORD: "password"
        run: |
          bin/rails db:setup

      - name: Run Rails tests (Postgresql) üêò
        if: ${{ matrix.database == 'postgres' }}
        env:
          BUNDLE_GEMFILE: ${{ matrix.gemfile }}
          MAGLEV_APP_DATABASE_USERNAME: "maglev"
          MAGLEV_APP_DATABASE_PASSWORD: "password"
        run: bundle exec rspec      

      # === SQLite ü™Ω ===
      - name: Setup test database (SQLite) ü™Ω
        if: ${{ matrix.database == 'sqlite' }}
        env:
          BUNDLE_GEMFILE: ${{ matrix.gemfile }}
          RAILS_ENV: test
          USE_SQLITE: 1
        run: |
          cp spec/dummy/db/schema.rb spec/dummy/db/schema.pg.rb
          cp spec/dummy/db/schema.sqlite.rb spec/dummy/db/schema.rb
          cp spec/legacy_dummy/db/schema.rb spec/legacy_dummy/db/schema.pg.rb
          cp spec/legacy_dummy/db/schema.sqlite.rb spec/legacy_dummy/db/schema.rb
          bin/rails db:setup

      - name: Run Rails tests (SQLite) ü™Ω
        if: ${{ matrix.database == 'sqlite' }}
        env:
          BUNDLE_GEMFILE: ${{ matrix.gemfile }}
          USE_SQLITE: 1
        run: bundle exec rspec

      # === MYSQL üê¨ ===
      - name: Setup test database (MySQL) üê¨
        if: ${{ matrix.database == 'mysql' }} && ${{matrix.gemfile != 'Gemfile.rails_7_0' }}
        env:
          BUNDLE_GEMFILE: ${{ matrix.gemfile }}
          RAILS_ENV: test
          USE_MYSQL: 1
          MAGLEV_APP_DATABASE_HOST: "127.0.0.1"    
          MAGLEV_APP_DATABASE_USERNAME: "root"
          MAGLEV_APP_DATABASE_PASSWORD: "password"
        run: |
          cp spec/dummy/db/schema.mysql.rb spec/dummy/db/schema.rb
          cp spec/legacy_dummy/db/schema.mysql.rb spec/legacy_dummy/db/schema.rb
          bin/rails db:setup

      - name: Run Rails tests (MySQL) üê¨
        if: ${{ matrix.database == 'mysql' }} && ${{matrix.gemfile != 'Gemfile.rails_7_0' }}
        env:
          BUNDLE_GEMFILE: ${{ matrix.gemfile }}
          USE_MYSQL: 1
          MAGLEV_APP_DATABASE_HOST: "127.0.0.1"   
          MAGLEV_APP_DATABASE_USERNAME: "root"       
          MAGLEV_APP_DATABASE_PASSWORD: "password"
        run: bundle exec rspec

      # === MariaDB ü¶≠===
      - name: Setup test database (MariaDB) ü¶≠
        if: ${{ matrix.database == 'mariadb' }} && ${{matrix.gemfile != 'Gemfile.rails_7_0' }}
        env:
          BUNDLE_GEMFILE: ${{ matrix.gemfile }}
          RAILS_ENV: test
          USE_MYSQL: 1
          MAGLEV_APP_DATABASE_HOST: "127.0.0.1"   
          MAGLEV_APP_DATABASE_PORT: 3307
          MAGLEV_APP_DATABASE_USERNAME: "root"       
          MAGLEV_APP_DATABASE_PASSWORD: "password"        
        run: |
          cp spec/dummy/db/schema.mariadb.rb spec/dummy/db/schema.rb
          cp spec/legacy_dummy/db/schema.mariadb.rb spec/legacy_dummy/db/schema.rb
          bin/rails db:setup

      - name: Run Rails tests (MariaDB) ü¶≠
        if: ${{ matrix.database == 'mariadb' }} && ${{matrix.gemfile != 'Gemfile.rails_7_0' }}
        env:
          BUNDLE_GEMFILE: ${{ matrix.gemfile }}
          USE_MYSQL: 1
          MAGLEV_APP_DATABASE_HOST: "127.0.0.1"   
          MAGLEV_APP_DATABASE_PORT: 3307
          MAGLEV_APP_DATABASE_USERNAME: "root"       
          MAGLEV_APP_DATABASE_PASSWORD: "password"
        run: bundle exec rspec

      # NOTE: disabled because an error of eslint in the GH env
      # - name: Run Javascript linter
      #   run: yarn lint
